name: Deploy to Ubuntu Server

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup SSH
              run: |
                  mkdir -p ~/.ssh
                  printf "%s\n" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
                  chmod 600 ~/.ssh/id_ed25519
                  ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

            - name: Copy project to server
              run: |
                  rsync -avz --delete ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/youtubeClone

            - name: Build on server
              run: |
                  ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                    cd ~/youtubeClone
                    echo "GOOGLE_API_KEY='${{ secrets.GOOGLE_API_KEY }}'" > .env.local
                    echo "ROOT='${{ secrets.ROOT }}'"> .env.local
                    echo "NEXT_PUBLIC_ROOT='${{ secrets.NEXT_PUBLIC_ROOT }}'"> .env.local
                    echo "NEXT_PUBLIC_API_KEY='${{ secrets.NEXT_PUBLIC_API_KEY }}'"> .env.local
                    echo "NEXT_PUBLIC_AUTH_DOMAIN='${{ secrets.NEXT_PUBLIC_AUTH_DOMAIN }}'"> .env.local
                    echo "NEXT_PUBLIC_PROJECT_ID='${{ secrets.NEXT_PUBLIC_PROJECT_ID }}'"> .env.local
                    echo "NEXT_PUBLIC_STORAGE_BUCKET='${{ secrets.NEXT_PUBLIC_STORAGE_BUCKET }}'"> .env.local
                    echo "NEXT_PUBLIC_MESSAGING_SENDER_ID='${{ secrets.NEXT_PUBLIC_MESSAGING_SENDER_ID }}'"> .env.local
                    echo "NEXT_PUBLIC_APP_ID='${{ secrets.NEXT_PUBLIC_APP_ID }}'"> .env.local
                    echo "NEXT_PUBLIC_MEASUREMENT_ID='${{ secrets.NEXT_PUBLIC_MEASUREMENT_ID }}'"> .env.local
                    echo "NODE_ENV='${{ secrets.NODE_ENV }}'"> .env.local
                    echo "FIREBASE_ADMIN_CREDENTIALS='${{ secrets.FIREBASE_ADMIN_CREDENTIALS }}'"> .env.local
                    npm install
                    npm run build
                  EOF
